// Copyright 2024 Michael Fabian 'Xaymar' Dirks <info@xaymar.com>
//
// Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
//
// 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
// 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
// 3. Neither the name of the copyright holder nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS “AS IS” AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
//

#ifndef HELLDIVERS2_BONES
#define HELLDIVERS2_BONES

#ifndef IS_INCLUDE
    #define IS_INCLUDE
    #define HELLDIVERS2_BONES_INCLUDE
#endif
#include "common.bt"
#ifdef HELLDIVERS2_BONES_INCLUDE
    #undef IS_INCLUDE
#endif

struct bones_t {
    uint32_t bones;
    uint32_t parents;
    
    // This isn't solid. It's never the correct size.
    // bones=11, parents=6, this area is 68 bytes long
    // - parents*4 + bones*4
    // bones=140, parents=6, this area is 584 bytes long
    // - parents*4 + bones*4
    // bones=2, parents=6, this area is 32 bytes long.
    // - parents*4 + bones*4
    float parent_float[parents];
    u8vec4_t bone_thing[bones];
    
    // Bone roots it seems.
    uint32_t parent[parents];
    
    // This one is solid.
    struct {
        string name;
    } bone[bones] <optimize=false>;    
};

#ifndef IS_INCLUDE
bones_t Bones;
#endif

#endif